server:
  port: 9040
  
spring:
  redis:
    host: 192.168.130.11
    port: 6379
    database: 2
  cloud:
    gateway:
      routes:
      - id: proxy_route
        uri: http://localhost:9052
        predicates:
        - Path=/**  
        filters:
        - StripPrefix=0 #去除前缀层级
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 1  # 令牌桶的容积， 允许用户每秒做多少次请求
            redis-rate-limiter.burstCapacity: 3  # 令牌桶的容量，允许在一秒钟内完成的最大请求数
            key-resolver: "#{@ipKeyResolver}" #SPEL表达式取得对应的bean
        - name: Hystrix
          args:
            name: fallbackcmd
            fallbackUri: forward:/fallback  # fallback 对应的 uri，这里的 uri 仅支持forward: schemed 的
        - name: Retry
          args:
            retries: 3 # 重试次数，默认值是3次
            series:    # 状态码配置（分段），符合的某段状态码才会进行重试逻辑，默认值是SERVER_ERROR，值是5，也就是5XX(5开头的状态码)
            - SERVER_ERROR
            statuses:  #状态码配置，和series不同的是这边是具体状态码的配置，取值请参考：org.springframework.http.HttpStatus
            - INTERNAL_SERVER_ERROR
            methods:   # 哪些方法的请求需要进行重试逻辑，默认值是GET方法 
            - GET
            - POST
            exceptions:  #指定哪些异常需要进行重试逻辑，默认值是java.io.IOException
            - java.io.IOException